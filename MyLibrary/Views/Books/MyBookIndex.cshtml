@model IEnumerable<MyLibrary.Models.Book>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Indexxx";
}

    <h1>@((await UserManager.GetUserAsync(User)).FirstName)'s books! </h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Language)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishDate)
            </th>
            @* <th>
                    @Html.DisplayNameFor(model => model.catagory.CategoryName)
                </th> *@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Language)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishDate)
                </td>
                @*
                    <td>
                        @Html.DisplayFor(modelItem => item.catagory.CategoryName)
                    </td> *@
                <td>
                    <a asp-action="Edit" asp-route-id="@item.BookId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.BookId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.BookId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
